<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CGUI</name>
    </assembly>
    <members>
        <member name="T:CGUI.CommandLine.CommandArgs">
            <summary>
            Custom event class used for passing command info to the user. [IN DEVELOPMENT]
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.CommandArgs.Arguments">
            <summary>
            The command's arguments.
            </summary>
        </member>
        <member name="T:CGUI.CommandLine.CommandLine">
            <summary>
            The main class for the CGUI command line interface. [IN DEVELOPMENT]
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.CommandLine.currentDirectory">
            <summary>
            The current directory that is displayed at the prompt (default is 0:\>)
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.CommandLine.Text">
            <summary>
            The text entered at the prompt.
            </summary>
        </member>
        <member name="E:CGUI.CommandLine.CommandLine.OnPrompt">
            <summary>
            Raised every time the prompt renders.
            </summary>
        </member>
        <member name="E:CGUI.CommandLine.CommandLine.UnknownCommand">
            <summary>
            Raised when the user enters a command that is not registered.
            </summary>
        </member>
        <member name="E:CGUI.CommandLine.CommandLine.OnBackspace">
            <summary>
            Raised when the user hits the Backspace key.
            </summary>
        </member>
        <member name="E:CGUI.CommandLine.CommandLine.OnKeyPress">
            <summary>
            Raised when the user presses a key.
            </summary>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.#ctor(CGUI.VGADriver)">
            <summary>
            Starts a new instance of the CommandLine class using the default colors (black background and white foreground).
            </summary>
            <param name="driver">The underlying VGADriver class instance.</param>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.#ctor(CGUI.VGADriver,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Starts a new instance of the CommandLine class using the specified colors.
            </summary>
            <param name="driver">The underlying VGADriver class instance.</param>
            <param name="backColor">The prompt's background color.</param>
            <param name="textColor">The prompt's foreground color.</param>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.RegisterCommand(CGUI.CommandLine.Command)">
            <summary>
            Registers a command.
            </summary>
            <param name="command">The Command class instance representing the command to register.</param>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.WriteToPrompt(System.String)">
            <summary>
            Writes the specified text to the prompt.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.WriteLine(System.String)">
            <summary>
            Writes the specified string and moves the cursor to the next line.
            </summary>
            <param name="text">The string to write.</param>
        </member>
        <member name="M:CGUI.CommandLine.CommandLine.Run">
            <summary>
            Runs the prompt.
            </summary>
        </member>
        <member name="T:CGUI.CommandLine.Command">
            <summary>
            Represents a command. [IN DEVELOPMENT]
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.Command.CommandText">
            <summary>
            The actual command name (e.g. cd).
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.Command.About">
            <summary>
            The command summary.
            </summary>
        </member>
        <member name="P:CGUI.CommandLine.Command.Flags">
            <summary>
            The command's flags; the keys are the actual flags (e.g. -a) and their corresponding values are the flags' summary (e.g. Summary sentence).
            </summary>
        </member>
        <member name="E:CGUI.CommandLine.Command.OnExecute">
            <summary>
            Raised when the command is called/executed.
            </summary>
        </member>
        <member name="M:CGUI.CommandLine.Command.#ctor(System.String,System.String)">
            <summary>
            Starts a new instance of the Command class.
            </summary>
            <param name="command">The actual command (e.g. cd)</param>
            <param name="about">The string that summarizes/describes the command.</param>
        </member>
        <member name="T:CGUI.ControlList">
            <summary>
            Represents a list of controls.
            </summary>
        </member>
        <member name="M:CGUI.ControlList.#ctor">
            <summary>
            Starts a new instance of the ControlList class.
            </summary>
        </member>
        <member name="M:CGUI.ControlList.GetEnumerator">
            <summary>
            Gets the enumerator for the ControlList.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CGUI.ControlList.Item(System.Int32)">
            <summary>
            Gets the control at the specified index.
            </summary>
            <param name="index">The index of the desired control.</param>
            <returns></returns>
        </member>
        <member name="P:CGUI.ControlList.Count">
            <summary>
            Gets the number of controls in the ControlList.
            </summary>
        </member>
        <member name="M:CGUI.ControlList.Add(CGUI.Control)">
            <summary>
            Adds a new control to the end of the ControlList.
            </summary>
            <param name="control">The control to add.</param>
        </member>
        <member name="M:CGUI.ControlList.Remove(CGUI.Control)">
            <summary>
            Removes a control from the ControlList. If the currently focused control is removed, the screen's first control is automatically focused.
            </summary>
            <param name="control">The control to remove.</param>
        </member>
        <member name="M:CGUI.ControlList.Remove(CGUI.Control,CGUI.Control)">
            <summary>
            Removes a control from the ControlList and sets focus to a different control.
            </summary>
            <param name="control">The control to remove.</param>
            <param name="focusNext">The control to set focus to after removing the initial control.</param>
        </member>
        <member name="M:CGUI.ControlList.RemoveAt(System.Int32)">
            <summary>
            Removes a control from the ControlList at the specified index.
            </summary>
            <param name="index">The index to remove at.</param>
        </member>
        <member name="M:CGUI.ControlList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of controls from the ControlList.
            </summary>
            <param name="index">The index at which to start at.</param>
            <param name="count">The number of controls to remove.</param>
        </member>
        <member name="M:CGUI.ControlList.Clear">
            <summary>
            Removes all controls from the ControlList.
            </summary>
        </member>
        <member name="M:CGUI.ControlList.Contains(CGUI.Control)">
            <summary>
            Determines whether an item is in the ControlList.
            </summary>
            <param name="control">The control to check for.</param>
            <returns></returns>
        </member>
        <member name="M:CGUI.ControlList.IndexOf(CGUI.Control)">
            <summary>
            Searches for the specified control and returns the zero-based index of the first occurrence in the ControlList.
            </summary>
            <param name="control">The control to search for.</param>
            <returns></returns>
        </member>
        <member name="M:CGUI.ControlList.Insert(System.Int32,CGUI.Control)">
            <summary>
            Inserts a control into the ControlList at the specified index.
            </summary>
            <param name="index">The index to insert the control at.</param>
            <param name="control">The control to insert.</param>
        </member>
        <member name="M:CGUI.ControlList.ToArray">
            <summary>
            Copies the elements of the ControlList to a new array.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CGUI.Label">
            <summary>
            The Label control.
            </summary>
        </member>
        <member name="P:CGUI.Label.Text">
            <summary>
            The label's text.
            </summary>
        </member>
        <member name="P:CGUI.Label.foreColor">
            <summary>
            The text color of the label.
            </summary>
        </member>
        <member name="M:CGUI.Label.#ctor(System.String,System.Drawing.Color,CGUI.VerticalAlign,CGUI.HorizontalAlign)">
            <summary>
            Starts a new instance of the Label class.
            </summary>
            <param name="text">The label text.</param>
            <param name="foreColor">The text color.</param>
            <param name="verticalAlign">The text's vertical alignment.</param>
            <param name="horizontalAlign">The text's horizontal alignment.</param>
        </member>
        <member name="M:CGUI.Label.#ctor(System.String,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Label class.
            </summary>
            <param name="text">The label text.</param>
            <param name="foreColor">The text color.</param>
            <param name="x">The label's X coordinate.</param>
            <param name="y">The label's Y coordinate.</param>
        </member>
        <member name="M:CGUI.Label.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Label class.
            </summary>
            <param name="text">The label text in the default color (white).</param>
            <param name="x">The label's X coordinate.</param>
            <param name="y">The label's Y coordinate.</param>
        </member>
        <member name="M:CGUI.Label.#ctor(System.String,Cosmos.System.Graphics.Point)">
            <summary>
            Starts a new instance of the Label class.
            </summary>
            <param name="text">The label text in the default color (white).</param>
            <param name="point">The point to place the label.</param>
        </member>
        <member name="M:CGUI.Label.#ctor(System.String,System.Drawing.Color,Cosmos.System.Graphics.Point)">
            <summary>
            Starts a new instance of the Label class.
            </summary>
            <param name="text">The label text in the default color (white).</param>
            <param name="foreColor">The text color.</param>
            <param name="point">The point to place the label.</param>
        </member>
        <member name="M:CGUI.Label.Update(System.String)">
            <summary>
            Updates/changes the label's text.
            </summary>
            <param name="newText">The new text to display.</param>
        </member>
        <member name="T:CGUI.Picture">
            <summary>
            The Picture control.
            </summary>
        </member>
        <member name="P:CGUI.Picture.Image">
            <summary>
            The control's image.
            </summary>
        </member>
        <member name="P:CGUI.Picture.borderColor">
            <summary>
            The border color around the image. This is off by default.
            </summary>
        </member>
        <member name="M:CGUI.Picture.#ctor(Cosmos.System.Graphics.Image,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Picture class.
            </summary>
            <param name="image">The image to use.</param>
            <param name="x">The picture's X coordinate.</param>
            <param name="y">The picture's Y coordinate.</param>
        </member>
        <member name="M:CGUI.Picture.Update">
            <summary>
            Updates the picture.
            </summary>
        </member>
        <member name="T:CGUI.TextBox">
            <summary>
            The TextBox control.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.KeyPresses">
            <summary>
            The list of KeyPress instances representing extra/custom keys to listen for when the textbox has focus.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.PlaceholderColor">
            <summary>
            The color of the placeholder text; default is dark gray.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.UnfocusForeColor">
            <summary>
            The foreground color of the textbox when it is not in focus.
            </summary>       
        </member>
        <member name="P:CGUI.TextBox.UnfocusBackColor">
            <summary>
            The background color of the textbox when it is not in focus.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.ForeColor">
            <summary>
            The text color for the textbox (including the cursor).
            </summary>
        </member>
        <member name="P:CGUI.TextBox.BackColor">
            <summary>
            The background color for the textbox.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.Filter">
            <summary>
            The character(s) that are allowed in the textbox. Set this to blank ("") to disable and allow all characters.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.Mask">
            <summary>
            The character to draw on the screen instead of the actual character. Set this to '~' to disable.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.BeepOnLimit">
            <summary>
            Determines whether or not to beep when attempting to type outside of the textbox's character limit.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.Placeholder">
            <summary>
            The placeholder text for the textbox; set to blank ("") to disable.
            </summary>
        </member>
        <member name="P:CGUI.TextBox.Text">
            <summary>
            Gets the current text in the textbox.
            </summary>
        </member>
        <member name="E:CGUI.TextBox.OnDelete">
            <summary>
            Raised when a character is deleted from the textbox.
            </summary>
        </member>
        <member name="E:CGUI.TextBox.OnKeyPress">
            <summary>
            Raised when a character is entered into the textbox, and returns the ConsoleKeyInfo instance.
            </summary>
        </member>
        <member name="E:CGUI.TextBox.OnLimit">
            <summary>
            Raised when the user attempts to enter or delete characters outside of the textbox's character range limit.
            </summary>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="placeholder">The placeholder text for the textbox; set to blank ("") to disable.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.Char,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="mask">The character to draw on the screen instead of the actual character. Set this to '~' to disable.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="foreColor">The text color.</param>
            <param name="backColor">The background color for the textbox.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.Drawing.Color,System.Drawing.Color,System.String,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="foreColor">The text color.</param>
            <param name="backColor">The background color for the textbox.</param>
            <param name="placeholder">The placeholder text for the textbox; set to blank ("") to disable.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="foreColor">The text color.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the TextBox class.
            </summary>
            <param name="charLength">The number of characters allowed in the textbox.</param>
            <param name="x">The textbox's X coordinate.</param>
            <param name="y">The textbox's Y coordinate.</param>
        </member>
        <member name="M:CGUI.TextBox.Focus">
            <summary>
            Sets focus to the textbox.
            </summary>
        </member>
        <member name="M:CGUI.TextBox.SetText(System.String)">
            <summary>
            Sets the specified text into the textbox.
            </summary>
            <param name="text">The text to put in the textbox.</param>
        </member>
        <member name="M:CGUI.TextBox.Enable">
            <summary>
            Enables the textbox.
            </summary>
        </member>
        <member name="M:CGUI.TextBox.Disable">
            <summary>
            Disables the textbox.
            </summary>
        </member>
        <member name="T:CGUI.Button">
            <summary>
            The Button control.
            </summary>
        </member>
        <member name="P:CGUI.Button.KeyPresses">
            <summary>
            The list of KeyPress instances representing extra/custom keys to listen for when the button has focus.
            </summary>
        </member>
        <member name="E:CGUI.Button.OnEnter">
            <summary>
            Raised when the TriggerKey is pressed.
            </summary>
        </member>
        <member name="P:CGUI.Button.UnfocusTextColor">
            <summary>
            The text color when the button is not in focus.
            </summary>
        </member>
        <member name="P:CGUI.Button.UnfocusBackColor">
            <summary>
            The background color when the button is not in focus.
            </summary>
        </member>
        <member name="P:CGUI.Button.TriggerKey">
            <summary>
            The key that the button listens for (default is Enter/Return). When the key is pressed, the OnEnter event is raised.
            </summary>
        </member>
        <member name="P:CGUI.Button.TextColor">
            <summary>
            The text color.
            </summary>
        </member>
        <member name="P:CGUI.Button.BackColor">
            <summary>
            The background color.
            </summary>
        </member>
        <member name="M:CGUI.Button.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Button class.
            </summary>
            <param name="text">The button text.</param>
            <param name="x">The button's X coordinate.</param>
            <param name="y">The button's Y coordinate.</param>
        </member>
        <member name="M:CGUI.Button.#ctor(System.String,System.ConsoleKey,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Button class.
            </summary>
            <param name="text">The button text.</param>
            <param name="triggerKey">The key that the button listens for (default is Enter/Return). When the key is pressed, the OnEnter event is raised.</param>
            <param name="x">The button's X coordinate.</param>
            <param name="y">The button's Y coordinate.</param>
        </member>
        <member name="M:CGUI.Button.Focus">
            <summary>
            Sets focus to the button.
            </summary>
        </member>
        <member name="M:CGUI.Button.Enable">
            <summary>
            Enables the button.
            </summary>
        </member>
        <member name="M:CGUI.Button.Disable">
            <summary>
            Disables the button.
            </summary>
        </member>
        <member name="T:CGUI.KeyPress">
            <summary>
            Represents a keypress.
            </summary>
        </member>
        <member name="P:CGUI.KeyPress.ConsoleKeyInfo">
            <summary>
            The ConsoleKeyInfo instance representing the key with its modifiers, if any.
            </summary>
        </member>
        <member name="E:CGUI.KeyPress.OnPress">
            <summary>
            Raised when the key and any modifiers associated with it is pressed.
            </summary>
        </member>
        <member name="M:CGUI.KeyPress.#ctor(System.ConsoleKey,System.ConsoleModifiers)">
            <summary>
            Starts a new instance of the KeyPress class using the specified key and modifiers.
            </summary>
            <param name="key">The ConsoleKey to use.</param>
            <param name="modifiers">The key's modifiers.</param>
        </member>
        <member name="M:CGUI.KeyPress.#ctor(System.ConsoleKey)">
            <summary>
            Starts a new instance of the KeyPress class using the specified key.
            </summary>
            <param name="key">The ConsoleKey to use.</param>
        </member>
        <member name="T:CGUI.ConsoleKeyInfo">
            <summary>
            Represents info about a key and its modifiers.
            </summary>
        </member>
        <member name="P:CGUI.ConsoleKeyInfo.Key">
            <summary>
            The ConsoleKey represented in this instance.
            </summary>
        </member>
        <member name="P:CGUI.ConsoleKeyInfo.Modifiers">
            <summary>
            The key's modifiers, if any. If there is none, this equals zero.
            </summary>
        </member>
        <member name="P:CGUI.ConsoleKeyInfo.KeyChar">
            <summary>
            The character represented by the ConsoleKey. If the ConsoleKey is longer than one character, then this is null and KeyString is used.
            </summary>
        </member>
        <member name="P:CGUI.ConsoleKeyInfo.KeyString">
            <summary>
            The string represented by the ConsoleKey. If the ConsoleKey is only one character long, then both KeyString and KeyChar are used.
            </summary>
        </member>
        <member name="M:CGUI.ConsoleKeyInfo.#ctor(System.ConsoleKey,System.ConsoleModifiers)">
            <summary>
            Starts a new instance of the ConsoleKeyInfo class using the specified key and modifiers.
            </summary>
            <param name="key">The ConsoleKey to use.</param>
            <param name="modifiers">The modifiers to use.</param>
        </member>
        <member name="M:CGUI.ConsoleKeyInfo.#ctor(System.ConsoleKey)">
            <summary>
            Starts a new instance of the ConsolekeyInfo class using the specified key.
            </summary>
            <param name="key">The ConsoleKey to use.</param>
        </member>
        <member name="T:CGUI.Status">
            <summary>
            Represents a controls' status.
            </summary>
        </member>
        <member name="F:CGUI.Status.Null">
            <summary>
            For internal purposes only.
            </summary>
        </member>
        <member name="F:CGUI.Status.OK">
            <summary>
            Status for a control that is all good (not out of bounds).
            </summary>
        </member>
        <member name="F:CGUI.Status.OriginOutOfBounds">
            <summary>
            Status for a control whose origin (X,Y location) is out of bounds.
            </summary>
        </member>
        <member name="F:CGUI.Status.ControlOutOfBounds">
            <summary>
            Status for a control that is partially or completely out of bounds.
            </summary>
        </member>
        <member name="T:CGUI.ControlStatus">
            <summary>
            Represents and contains info about that controls status.
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.Register">
            <summary>
            Register values.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.ID">
            <summary>
            ID.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Enable">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.MaxWidth">
            <summary>
            Max width.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.MaxHeight">
            <summary>
            Max height.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.BitsPerPixel">
            <summary>
            Bits per pixel.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.PseudoColor">
            <summary>
            Pseudo color.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.RedMask">
            <summary>
            Red mask.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.GreenMask">
            <summary>
            Green mask.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.BlueMask">
            <summary>
            Blue mask.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.BytesPerLine">
            <summary>
            Bytes per line.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.FrameBufferStart">
            <summary>
            Frame buffer start.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.FrameBufferOffset">
            <summary>
            Frame buffer offset.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.VRamSize">
            <summary>
            VRAM size.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.FrameBufferSize">
            <summary>
            Frame buffer size.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Capabilities">
            <summary>
            Capabilities.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.MemStart">
            <summary>
            Memory start.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.MemSize">
            <summary>
            Memory size.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.ConfigDone">
            <summary>
            Config done.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Sync">
            <summary>
            Sync.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.Busy">
            <summary>
            Busy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.GuestID">
            <summary>
            Guest ID.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.CursorID">
            <summary>
            Cursor ID.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.CursorX">
            <summary>
            Cursor X.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.CursorY">
            <summary>
            Cursor Y.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.CursorOn">
            <summary>
            Cursor on.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.HostBitsPerPixel">
            <summary>
            Host bits per pixel.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.ScratchSize">
            <summary>
            Scratch size.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.MemRegs">
            <summary>
            Memory registers.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.NumDisplays">
            <summary>
            Number of displays.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.PitchLock">
            <summary>
            Pitch lock.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Register.FifoNumRegisters">
            <summary>
            Indicates maximum size of FIFO Registers.
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.ID">
            <summary>
            ID values.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ID.Magic">
            <summary>
            Magic starting point.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ID.V0">
            <summary>
            V0.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ID.V1">
            <summary>
            V1.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ID.V2">
            <summary>
            V2.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ID.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.FIFO">
            <summary>
            FIFO values.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFO.Min">
            <summary>
            Min.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFO.Max">
            <summary>
            Max.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFO.NextCmd">
            <summary>
            Next command.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFO.Stop">
            <summary>
            Stop.
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand">
            <summary>
            FIFO command values.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.Update">
            <summary>
            Update.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_FILL">
            <summary>
            Rectange fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_COPY">
            <summary>
            Rectange copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_BITMAP">
            <summary>
            Define bitmap.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_BITMAP_SCANLINE">
            <summary>
            Define bitmap scanline.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_PIXMAP">
            <summary>
            Define pixmap.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_PIXMAP_SCANLINE">
            <summary>
            Define pixmap scanline.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_BITMAP_FILL">
            <summary>
            Rectange bitmap fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_PIXMAP_FILL">
            <summary>
            Rectange pixmap fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_BITMAP_COPY">
            <summary>
            Rectange bitmap copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_PIXMAP_COPY">
            <summary>
            Rectange pixmap fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.FREE_OBJECT">
            <summary>
            Free object.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_FILL">
            <summary>
            Rectangle raster operation fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_COPY">
            <summary>
            Rectangle raster operation copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_BITMAP_FILL">
            <summary>
            Rectangle raster operation bitmap fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_PIXMAP_FILL">
            <summary>
            Rectangle raster operation pixmap fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_BITMAP_COPY">
            <summary>
            Rectangle raster operation bitmap copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.RECT_ROP_PIXMAP_COPY">
            <summary>
            Rectangle raster operation pixmap copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_CURSOR">
            <summary>
            Define cursor.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DISPLAY_CURSOR">
            <summary>
            Display cursor.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.MOVE_CURSOR">
            <summary>
            Move cursor.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFOCommand.DEFINE_ALPHA_CURSOR">
            <summary>
            Define alpha cursor.
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.IOPortOffset">
            <summary>
            IO port offset.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IOPortOffset.Index">
            <summary>
            Index.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IOPortOffset.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IOPortOffset.Bios">
            <summary>
            BIOS.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IOPortOffset.IRQ">
            <summary>
            IRQ.
            </summary>
        </member>
        <member name="T:CGUI.DoubleBufferedVMWareSVGAII.Capability">
            <summary>
            Capability values.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.RectFill">
            <summary>
            Rectangle fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.RectCopy">
            <summary>
            Rectangle copy.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.RectPatFill">
            <summary>
            Rectangle pattern fill.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.LecacyOffscreen">
            <summary>
            Lecacy off screen.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.RasterOp">
            <summary>
            Raster operation.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Cursor">
            <summary>
            Cruser.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.CursorByPass">
            <summary>
            Cursor bypass.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.CursorByPass2">
            <summary>
            Cursor bypass2.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.EigthBitEmulation">
            <summary>
            Eigth bit emulation.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.AlphaCursor">
            <summary>
            Alpha cursor.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Glyph">
            <summary>
            Glyph.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.GlyphClipping">
            <summary>
            Glyph clipping.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Offscreen1">
            <summary>
            Offscreen.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.AlphaBlend">
            <summary>
            Alpha blend.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.ThreeD">
            <summary>
            Three D.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.ExtendedFifo">
            <summary>
            Extended FIFO.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.MultiMon">
            <summary>
            Multi monitors.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.PitchLock">
            <summary>
            Pitch lock.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.IrqMask">
            <summary>
            IRQ mask.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.DisplayTopology">
            <summary>
            Display topology.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Gmr">
            <summary>
            GMR.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Traces">
            <summary>
            Traces.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.Gmr2">
            <summary>
            GMR2.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Capability.ScreenObject2">
            <summary>
            Screen objects.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IndexPort">
            <summary>
            Index port.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.ValuePort">
            <summary>
            Value port.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.BiosPort">
            <summary>
            BIOS port.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.IRQPort">
            <summary>
            IRQ port.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.Video_Memory">
            <summary>
            Video memory block.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.FIFO_Memory">
            <summary>
            FIFO memory block.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.device">
            <summary>
            PCI device.
            </summary>
        </member>
        <member name="P:CGUI.DoubleBufferedVMWareSVGAII.height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="P:CGUI.DoubleBufferedVMWareSVGAII.width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="F:CGUI.DoubleBufferedVMWareSVGAII.capabilities">
            <summary>
            Capabilities.
            </summary>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.InitializeFIFO">
            <summary>
            Initialize FIFO.
            </summary>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.SetMode(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Set video mode.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="depth">Depth.</param>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.WriteRegister(CGUI.DoubleBufferedVMWareSVGAII.Register,System.UInt32)">
            <summary>
            Write register.
            </summary>
            <param name="register">A register.</param>
            <param name="value">A value.</param>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.ReadRegister(CGUI.DoubleBufferedVMWareSVGAII.Register)">
            <summary>
            Read register.
            </summary>
            <param name="register">A register.</param>
            <returns>uint value.</returns>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.GetFIFO(CGUI.DoubleBufferedVMWareSVGAII.FIFO)">
            <summary>
            Get FIFO.
            </summary>
            <param name="cmd">FIFO command.</param>
            <returns>uint value.</returns>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.SetFIFO(CGUI.DoubleBufferedVMWareSVGAII.FIFO,System.UInt32)">
            <summary>
            Set FIFO.
            </summary>
            <param name="cmd">Command.</param>
            <param name="value">Value.</param>
            <returns></returns>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.WaitForFifo">
            <summary>
            Wait for FIFO.
            </summary>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.WriteToFifo(System.UInt32)">
            <summary>
            Write to FIFO.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.Update(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Update FIFO.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.SetPixel(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Set pixel.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="color">Color.</param>
            <exception cref="T:System.Exception">Thrown on memory access violation.</exception>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.GetPixel(System.UInt32,System.UInt32)">
            <summary>
            Get pixel.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <returns>uint value.</returns>
            <exception cref="T:System.Exception">Thrown on memory access violation.</exception>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.Clear(System.UInt32)">
            <summary>
            Clear screen to specified color.
            </summary>
            <param name="color">Color.</param>
            <exception cref="T:System.Exception">Thrown on memory access violation.</exception>
            <exception cref="T:System.NotImplementedException">Thrown if VMWare SVGA 2 has no rectange copy capability</exception>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.Copy(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copy rectangle.
            </summary>
            <param name="x">Source X coordinate.</param>
            <param name="y">Source Y coordinate.</param>
            <param name="newX">Destination X coordinate.</param>
            <param name="newY">Destination Y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <exception cref="T:System.NotImplementedException">Thrown if VMWare SVGA 2 has no rectange copy capability</exception>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.Fill(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Fill rectangle.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="color">Color.</param>
            <exception cref="T:System.Exception">Thrown on memory access violation.</exception>
            <exception cref="T:System.NotImplementedException">Thrown if VMWare SVGA 2 has no rectange copy capability</exception>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.DefineCursor">
            <summary>
            Define cursor.
            </summary>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.SetCursor(System.Boolean,System.UInt32,System.UInt32)">
            <summary>
            Set cursor.
            </summary>
            <param name="visible">Visible.</param>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="M:CGUI.DoubleBufferedVMWareSVGAII.#ctor">
            <summary>
            Create new inctanse of the VMWareSVGAII class.
            </summary>
        </member>
        <member name="T:CGUI.Extensions">
            <summary>
            CGUI Extension class.
            </summary>
        </member>
        <member name="M:CGUI.Extensions.ConvertToString(System.ConsoleKey)">
            <summary>
            Converts a ConsoleKey instance value into a string.
            </summary>
            <param name="key">The ConsoleKey instance.</param>
            <returns></returns>
        </member>
        <member name="M:CGUI.Extensions.ConvertToString(CGUI.ControlType)">
            <summary>
            Converts a ControlType instance value into a string.
            </summary>
            <param name="cType">The ControlType instance.</param>
            <returns></returns>
        </member>
        <member name="T:CGUI.VGADriver">
            <summary>
            Double-Buffered SVGAII Video Driver
            </summary>
        </member>
        <member name="M:CGUI.VGADriver.#ctor">
            <summary>
            Starts a new instance of the VGADriver class using the default screen size (640x480).
            </summary>
        </member>
        <member name="M:CGUI.VGADriver.#ctor(System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the VGADriver class using the specified screen width and height.
            </summary>
            <param name="screenWidth">The screen width, in pixels.</param>
            <param name="screenHeight">The screen height, in pixels.</param>
        </member>
        <member name="M:CGUI.VGADriver.RenderScreen(CGUI.Screen)">
            <summary>
            Renders a Screen.
            </summary>
            <param name="screen">The Screen to render.</param>
        </member>
        <member name="M:CGUI.VGADriver.UpdateScreen">
            <summary>
            Updates the screen.
            </summary>
        </member>
        <member name="M:CGUI.VGADriver.ClearScreen">
            <summary>
            Clears the screen using the default color (black).
            </summary>
        </member>
        <member name="M:CGUI.VGADriver.ClearScreen(System.Drawing.Color)">
            <summary>
            Clears the screen using the specified color.
            </summary>
            <param name="color">The color to clear the screen with.</param>
        </member>
        <member name="T:CGUI.Area">
            <summary>
            Represents an area on the screen.
            </summary>
        </member>
        <member name="P:CGUI.Area.X">
            <summary>
            The X coordinate.
            </summary>
        </member>
        <member name="P:CGUI.Area.Y">
            <summary>
            The Y coordinate.
            </summary>
        </member>
        <member name="P:CGUI.Area.Width">
            <summary>
            The area width.
            </summary>
        </member>
        <member name="P:CGUI.Area.Height">
            <summary>
            The area height.
            </summary>
        </member>
        <member name="M:CGUI.Area.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Area class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="width">The area width.</param>
            <param name="height">The area height.</param>
        </member>
        <member name="T:CGUI.Screen">
            <summary>
            Represents a screen containing controls.
            </summary>
        </member>
        <member name="P:CGUI.Screen.Controls">
            <summary>
            The controls contained in this Screen instance.
            </summary>
        </member>
        <member name="P:CGUI.Screen.backColor">
            <summary>
            The screen's background color.
            </summary>
        </member>
        <member name="M:CGUI.Screen.#ctor">
            <summary>
            Starts a new instance of the Screen class with the default background color (black).
            </summary>
        </member>
        <member name="M:CGUI.Screen.#ctor(System.Drawing.Color)">
            <summary>
            Starts a new instance of the Screen class with the specified background color.
            </summary>
            <param name="backColor">The background color for the screen.</param>
        </member>
        <member name="T:CGUI.ControlType">
            <summary>
            Represents types of currently defined controls.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.Label">
            <summary>
            Represents a label.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.Line">
            <summary>
            Represents a line.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.Rectangle">
            <summary>
            Represents a rectangle.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.Picture">
            <summary>
            Represents a picture.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.TextBox">
            <summary>
            Represents a textbox.
            </summary>
        </member>
        <member name="F:CGUI.ControlType.Button">
            <summary>
            Represents a button.
            </summary>
        </member>
        <member name="T:CGUI.HorizontalAlign">
            <summary>
            Represents horizontal alignments.
            </summary>
        </member>
        <member name="F:CGUI.HorizontalAlign.Center">
            <summary>
            Center align.
            </summary>
        </member>
        <member name="F:CGUI.HorizontalAlign.Left">
            <summary>
            Left align.
            </summary>
        </member>
        <member name="F:CGUI.HorizontalAlign.Right">
            <summary>
            Right align.
            </summary>
        </member>
        <member name="T:CGUI.VerticalAlign">
            <summary>
            Represents vertical alignments.
            </summary>
        </member>
        <member name="F:CGUI.VerticalAlign.Top">
            <summary>
            Top align.
            </summary>
        </member>
        <member name="F:CGUI.VerticalAlign.Middle">
            <summary>
            Middle align.
            </summary>
        </member>
        <member name="F:CGUI.VerticalAlign.Bottom">
            <summary>
            Bottom align.
            </summary>
        </member>
        <member name="T:CGUI.Control">
            <summary>
            Internal base class for CGUI controls.
            </summary>
        </member>
        <member name="T:CGUI.Screens">
            <summary>
            Class containing pre-made screens.
            </summary>
        </member>
        <member name="M:CGUI.Screens.StartupScreen(System.String,System.Int32,System.Int32)">
            <summary>
            Represents a simple startup screen containing a message.
            </summary>
            <param name="text">The text to display.</param>
            <param name="x">The text's X position.</param>
            <param name="y">The text's Y position.</param>
            <returns>A Screen instance that can be displayed with VGADriver.RenderScreen().</returns>
        </member>
        <member name="M:CGUI.Screens.StartupScreen(System.String,CGUI.VerticalAlign,CGUI.HorizontalAlign)">
            <summary>
            Represents a simple startup screen containing a message at the specified alignments.
            </summary>
            <param name="text">The text to display.</param>
            <param name="verticalAlign">The text's vertical alignment.</param>
            <param name="horizontalAlign">The text's horizontal alignment.</param>
            <returns></returns>
        </member>
        <member name="T:CGUI.Shapes.Line">
            <summary>
            The Line control.
            </summary>
        </member>
        <member name="P:CGUI.Shapes.Line.Color">
            <summary>
            The line's color.
            </summary>
        </member>
        <member name="M:CGUI.Shapes.Line.#ctor(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Starts a new instance of the Line class.
            </summary>
            <param name="color">The color of the line.</param>
            <param name="startx">The start X coordinate.</param>
            <param name="starty">The start Y coordinate.</param>
            <param name="endx">The ending X coordinate.</param>
            <param name="endy">The ending Y coordinate.</param>
        </member>
        <member name="M:CGUI.Shapes.Line.Update">
            <summary>
            Updates the line.
            </summary>
        </member>
        <member name="T:CGUI.Shapes.Rectangle">
            <summary>
            The Rectangle control.
            </summary>
        </member>
        <member name="P:CGUI.Shapes.Rectangle.Color">
            <summary>
            The rectangle's color.
            </summary>
        </member>
        <member name="M:CGUI.Shapes.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Starts a new instance of the Rectangle class, representing a filled rectangle.
            </summary>
            <param name="x">The rectangle's X coordinate.</param>
            <param name="y">The rectangle's Y coordinate.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
            <param name="color">The rectangle's color.</param>
        </member>
        <member name="M:CGUI.Shapes.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            Starts a new instance of the Rectangle class, representing a filled or empty rectangle.
            </summary>
            <param name="x">The rectangle's X coordinate.</param>
            <param name="y">The rectangle's Y coordinate.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
            <param name="color">The rectangle's color.</param>
            <param name="fill">Set to true if the rectangle should be filled; otherwise, false.</param>
        </member>
        <member name="M:CGUI.Shapes.Rectangle.Update">
            <summary>
            Updates the rectangle.
            </summary>
        </member>
    </members>
</doc>
